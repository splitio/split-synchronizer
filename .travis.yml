jobs:
  include:
    - stage: test
      language: go
      go:
        - 1.13.x
      services:
        - redis-server
      script:
        - go test -v -cover $(go list ./... | grep -v /vendor/)

    - stage: build
      language: go
      go:
        - 1.13.x
      services:
        - redis-server
      before_script:
        - BUILD_VERSION=$(tail -n 1 splitio/version.go | awk '{print $4}' | tr -d '"')
        - mkdir -p ${TRAVIS_BUILD_DIR}/release/deploy/synchronizer/${BUILD_VERSION}
      script:
        - cd ${TRAVIS_BUILD_DIR}/release
        - sh build.sh
      before_deploy:
        - cd ${TRAVIS_BUILD_DIR}/release
        - cat versions.pre.html versions.html versions.pos.html > deploy/synchronizer/versions.html
        - cp install_linux_*.bin deploy/synchronizer/${BUILD_VERSION}/
        - cp install_osx_*.bin deploy/synchronizer/${BUILD_VERSION}/
        - cp split-sync-win_*.zip deploy/synchronizer/${BUILD_VERSION}/
        - cd ${TRAVIS_BUILD_DIR}/release/deploy/synchronizer/${BUILD_VERSION}
        - cp install_linux_*.bin ../install_linux.bin
        - cp install_osx_*.bin ../install_osx.bin
        - cp split-sync-win_*.zip ../split-sync-win.zip
      deploy:
        provider: s3
        access_key_id: ${AWS_ACCESS_KEY_ID}
        secret_access_key: ${AWS_SECRET_ACCESS_KEY}
        bucket: downloads.split.io
        region: us-east-1
        local_dir: ${TRAVIS_BUILD_DIR}/release/deploy
        skip_cleanup: true
        acl: public_read
        on:
          branch: master

    - stage: unstable
      language: minimal
      services:
        - docker
      before_script:
        - COMMIT=$(git rev-parse --short HEAD)
      script:
        - docker build -t ${ARTIFACTORY_REGISTRY}/split-synchronizer:${COMMIT} .
      deploy:
        provider: script
        script: >-
          echo "${ARTIFACTORY_PASSWORD}" | docker login -u "${ARTIFACTORY_USER}" --password-stdin "${ARTIFACTORY_REGISTRY}" &&
          docker push ${ARTIFACTORY_REGISTRY}/split-synchronizer
        skip_cleanup: true
        on:
          all_branches: true

    - stage: xray
      language: minimal
      services:
        - docker
      before_script:
        - BUILD_VERSION=$(tail -n 1 splitio/version.go | awk '{print $4}' | tr -d '"')
      script:
        - docker build -t ${ARTIFACTORY_REGISTRY}/split-synchronizer:${BUILD_VERSION} -t ${ARTIFACTORY_REGISTRY}/split-synchronizer:latest .
      deploy:
        provider: script
        script: >-
          echo "${ARTIFACTORY_PASSWORD}" | docker login -u "${ARTIFACTORY_USER}" --password-stdin "${ARTIFACTORY_REGISTRY}" &&
          docker push ${ARTIFACTORY_REGISTRY}/split-synchronizer
        skip_cleanup: true
        on:
          all_branches: true

stages:
  - name: test
    if: NOT (type = cron)
  - name: build
    if: (type = pull_request OR branch = master) AND NOT (type = cron)
  - name: unstable
    if: NOT (type = pull_request) AND NOT (branch = master)
  - name: xray
    if: (branch = master) OR (type = cron)

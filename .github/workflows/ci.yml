name: ci
on:
  pull_request:
    branches:
      - *

jobs:
  build-and-test:
    name: Build and run tests
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1'

      - name: Get version
        run: echo "VERSION=$(tail -n 1 splitio/version.go | awk '{print $4}' | tr -d '"')" >> $GITHUB_ENV

      - name: Run test
        run: make test_coverage

      - name: Create build folder 
        run: mkdir -p build

      - name: Build assets
        run: make release_assets

      - name: SonarQube Scan (Pull Request)
        uses: SonarSource/sonarcloud-github-action@v1.5
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
            -Dsonar.projectName=${{ github.event.repository.name }}
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.projectVersion=${{ env.VERSION }}
            -Dsonar.exclusions=**/*_test.go,**/vendor/**,**/testdata/*,test/*
            -Dsonar.test.inclusions=**/*_test.go,**/vendor/**,**/testdata/*,test/*
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.links.ci="https://github.com/splitio/${{ github.event.repository.name }}/actions"
            -Dsonar.links.scm="https://github.com/splitio/${{ github.event.repository.name }}"
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
            -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
            -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }}

  build-docker-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: [synchronizer, proxy]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile.${{ matrix.mode }}
          push: false

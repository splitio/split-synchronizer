name: ci
on:
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-test:
    name: Build and run Test
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1'
      - name: Set build version
        run: echo "VERSION=$(tail -n 1 splitio/version.go | awk '{print $4}' | tr -d '"')" >> $GITHUB_ENV
      - name: Execute build
        run: make release_assets
      - name: Run test
        run: go test -v -cover $(go list ./... | grep -v /vendor/) -coverprofile=coverage.out
      - name: Generate entrypoints
        run: make entrypoints
      - name: Docker Build for Sync
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile.synchronizer
          push: false
      - name: Docker Build for Proxy
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile.synchronizer
          push: false
      - name: SonarQube Scan (Pull Request)
        if: github.event_name == 'pull_request'
        uses: SonarSource/sonarcloud-github-action@v1.5
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
            -Dsonar.projectName=${{ github.event.repository.name }}
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.projectVersion=${{ env.VERSION }}
            -Dsonar.exclusions='**/*_test.go,**/vendor/**,**/testdata/*'
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.links.ci="https://github.com/splitio/${{ github.event.repository.name }}/actions"
            -Dsonar.links.scm="https://github.com/splitio/${{ github.event.repository.name }}"
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
            -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
            -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }}
